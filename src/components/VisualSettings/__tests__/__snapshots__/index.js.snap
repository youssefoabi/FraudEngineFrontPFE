// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VisualSettings renders correctly 1`] = `
<p
  defaultExpanded={false}
  title="Gestion du visuel"
>
  <WithStyles(ForwardRef(Grid))
    container={true}
    direction="column"
  >
    <div
      className="makeStyles-headerSlider-1"
    >
      Slider d'images de fond
    </div>
    <WithStyles(ForwardRef(Grid))
      container={true}
      spacing={2}
    >
      <h
        fullheight={false}
        item={true}
        md={3}
        sm={12}
        title={null}
        xl={3}
        xs={12}
      >
        <div
          className="makeStyles-imagesWrapper-2"
        >
          <WithStyles(ForwardRef(FormLabel))>
            Aperçu PC
          </WithStyles(ForwardRef(FormLabel))>
          <div
            alt=""
            className="makeStyles-imagePreview-3 makeStyles-imageUrlDesktop-4 makeStyles-imageUrlDesktop-6"
          />
          <WithStyles(ForwardRef(FormLabel))>
            Aperçu Mobile
          </WithStyles(ForwardRef(FormLabel))>
          <div
            alt=""
            className="makeStyles-imagePreview-3 makeStyles-imageUrlMobile-5 makeStyles-imageUrlMobile-7"
          />
        </div>
      </h>
      <h
        fullheight={false}
        item={true}
        md={9}
        sm={12}
        title={null}
        xl={9}
        xs={12}
      >
        <WithStyles(ForwardRef(Grid))>
          <f
            config={null}
            fields={
              Array [
                Object {
                  "columns": 5,
                  "id": "urlImageDesktop",
                  "label": "URL image PC",
                  "type": "input",
                },
                Object {
                  "columns": 5,
                  "id": "urlLinkDesktop",
                  "label": "Lien PC",
                  "type": "input",
                },
                Object {
                  "columns": 5,
                  "id": "urlImageMobile",
                  "label": "URL image Mobile",
                  "type": "input",
                },
                Object {
                  "columns": 5,
                  "id": "urlLinkMobile",
                  "label": "Lien Mobile",
                  "type": "input",
                },
              ]
            }
            inputs={null}
            onChange={[Function]}
            onInit={[Function]}
            title={null}
            values={Object {}}
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))>
          <f
            config={null}
            fields={
              Array [
                Object {
                  "columns": 5,
                  "id": "alt",
                  "label": "ALT",
                  "type": "input",
                },
                Object {
                  "columns": 4,
                  "id": "openInNewTab",
                  "label": "Ouvrir dans un nouvel onglet",
                  "type": "switch",
                },
                Object {
                  "columns": 3,
                  "id": "isEnable",
                  "label": "Active",
                  "type": "switch",
                },
              ]
            }
            inputs={null}
            onChange={[Function]}
            onInit={[Function]}
            title={null}
            values={Object {}}
          />
        </WithStyles(ForwardRef(Grid))>
      </h>
    </WithStyles(ForwardRef(Grid))>
    <br />
    <h
      fullheight={false}
      title="Parametrages des textes"
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
        lg={12}
        md={12}
        xs={12}
      >
        <f
          config={null}
          fields={
            Array [
              Object {
                "columns": 8,
                "id": "marketingText",
                "label": "Texte de l'accroche marketing",
                "multiline": true,
                "size": "large",
                "type": "input",
              },
              Object {
                "columns": 3,
                "id": "isMarketingTextEnable",
                "label": "Active",
                "type": "switch",
              },
              Object {
                "columns": 3,
                "id": "searchText",
                "label": "Texte du bouton rechercher",
                "type": "input",
              },
            ]
          }
          inputs={null}
          onChange={[Function]}
          onInit={[Function]}
          title={null}
          values={null}
        />
      </WithStyles(ForwardRef(Grid))>
    </h>
  </WithStyles(ForwardRef(Grid))>
</p>
`;
